<section class="sec-banner">
    <div class="bnr-img">
        <img src="{{baseUrl}}/assets/images/properties2/banner2.png" class="w-100" alt="residential construction companies in bangalore" title="residential construction companies in bangalore">

        <div class="bg-bnr-layer">

        </div>

        <div class="baner-cont-abs1 d-lg-block d-none">
            <h1>
               GALLERY
            </h1>
        </div>

    </div>
</section>

<section class="sec py-5 text-center">
    <div class="container">
        <h2 class="mn-hed py-4">Gallery</h2>

        <!-- Container to hold dynamically rendered project cards -->
        <div id="projectList4" class="row d-flex justify-content-around pt-4">
            <!-- Loading placeholder -->
            <div class="col-12 text-center" id="loading-placeholder">
                <p>Loading gallery images...</p>
            </div>
        </div>

    </div>
</section>

<!--Fancybox for image popups-->
<link rel="stylesheet" media="all" href="https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.5.7/jquery.fancybox.css" media="print" onload="this.media='all'">
<script defer src="https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.5.7/jquery.fancybox.min.js"></script>

<script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/9.6.1/firebase-app.js";
    import { getFirestore, collection, onSnapshot } from "https://www.gstatic.com/firebasejs/9.6.1/firebase-firestore.js";

    // Firebase configuration
    const firebaseConfig = {
        apiKey: "AIzaSyAEpyMUKI8eH2xU7_3Ve3whYWs7dXWOrwI",
        authDomain: "atha-eb597.firebaseapp.com",
        databaseURL: "https://atha-eb597-default-rtdb.firebaseio.com",
        projectId: "atha-eb597",
        storageBucket: "atha-eb597.appspot.com",
        messagingSenderId: "793772614946",
        appId: "1:793772614946:web:45fb6b530052fbdc44b17b",
        measurementId: "G-NR4CK21TCC"
    };

    // Initialize Firebase
    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);

    // Function to render a single project item
    function renderProjectItem(project) {
        const projectList4 = document.getElementById("projectList4");

        // Create a new div element for the project card
        const projectCard = document.createElement("div");
        projectCard.classList.add("col-lg-4");
        projectCard.classList.add("text-center");
        projectCard.classList.add("pb-5");
      
        // Add the HTML structure for the project card
        projectCard.innerHTML = `
            <div class="img-posrel">
                <a data-fancybox="gallery-0" href="${project.img_url}" data-expand="-1" class=" lazy">
                    <img src="${project.img_url}" class="w-100" alt="Project Image" loading="lazy" onerror="this.style.display='none'">
                </a>
            </div>
        `;

        // Append the project card to the project list container
        projectList4.appendChild(projectCard);
    }

    // Function to render all projects
    function renderAllProjects(projects) {
        const projectList4 = document.getElementById("projectList4");
        projectList4.innerHTML = ""; // Clear any existing content
        
        // Hide loading placeholder
        const loadingPlaceholder = document.getElementById("loading-placeholder");
        if (loadingPlaceholder) {
            loadingPlaceholder.style.display = 'none';
        }
        
        if (projects.length === 0) {
            projectList4.innerHTML = '<div class="col-12 text-center"><p>No gallery images available at the moment.</p></div>';
            return;
        }
        
        projects.forEach((project) => {
            renderProjectItem(project);
        });

        // Initialize Fancybox after images are loaded
        setTimeout(() => {
            if (typeof $.fancybox !== 'undefined') {
                $('[data-fancybox]').fancybox({
                    loop: true,
                    buttons: ['slideShow', 'fullScreen', 'thumbs', 'close']
                });
            }
        }, 500);
    }

    // Function to fetch projects in real-time from Firestore
    async function getProjectsRealTime() {
        try {
            const dbRef = collection(db, "Images");

            onSnapshot(dbRef, (querySnapshot) => {
                const projects = [];
                querySnapshot.forEach((doc) => {
                    const data = doc.data();
                    if (data && data.img_url) {
                        projects.push(data);
                    }
                });
                console.log(`Loaded ${projects.length} gallery images from Firebase`);
                renderAllProjects(projects);
            }, (error) => {
                console.error("Error fetching gallery images:", error);
                const projectList4 = document.getElementById("projectList4");
                projectList4.innerHTML = '<div class="col-12 text-center"><p>Error loading gallery images. Please try again later.</p></div>';
            });
        } catch (error) {
            console.error("Error initializing Firebase:", error);
            const projectList4 = document.getElementById("projectList4");
            projectList4.innerHTML = '<div class="col-12 text-center"><p>Error connecting to gallery service. Please try again later.</p></div>';
        }
    }

    // Function to store project data in localStorage
    function storeProjectData(project) {
        localStorage.setItem("selectedProject", JSON.stringify(project));
    }

    // Function to render selected project details
    function renderSelectedProject(project) {
        // Create the structure for the selected project
        const projectDetails = document.createElement("div");
        projectDetails.classList.add("col-12", "text-center", "pb-5");

        projectDetails.innerHTML = `
            <img src="${project.img_url}" class="pro-det" alt="">
            <p class="prop-subhed pt-4 pb-2 mb-0">
                ${project.title || ''}
            </p>
            <p class="prop-cmfont pb-2">
                ${project.des || ''}
            </p>
            <p class="prop-pric pt-4">
                ${project.feets || ''}
            </p>
            <p class="proj-inPric">${project.price || ''}</p>
        `;
    }

    // Function to load selected project details on page load
    function loadSelectedProjectOnPageLoad() {
        const storedProject = localStorage.getItem("selectedProject");
        if (storedProject) {
            const project = JSON.parse(storedProject);
            renderSelectedProject(project);
        }
    }

    // Event Listener: Load stored project on page load
    document.addEventListener("DOMContentLoaded", loadSelectedProjectOnPageLoad);

    // Fetch projects on page load
    getProjectsRealTime();
</script>